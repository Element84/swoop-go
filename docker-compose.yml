version: '3.8'

services:
  swoop-caboose:
    build: .
    restart: always
    stdin_open: true
    tty: true
    environment:
      SWOOP_DATABASE_HOST: "${SWOOP_DATABASE_HOST:-127.0.0.1}"
      SWOOP_DATABASE_PORT: "${SWOOP_DATABASE_PORT:-5432}"
      SWOOP_DATABASE_USER: "${SWOOP_DATABASE_USER:-postgres}"
      SWOOP_DATABASE_PASSWORD: "${SWOOP_DATABASE_PASSWORD:-password}"
      SWOOP_DATABASE_NAME: "${SWOOP_DATABASE_NAME:-swoop}"
      SWOOP_DATABASE_URL_EXTRA: "${SWOOP_DATABASE_URL_EXTRA:-?sslmode=disable}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID:-minio}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY:-password}"
      SWOOP_S3_ENDPOINT: "${SWOOP_S3_ENDPOINT:-http://127.0.0.1:9000}"
      SWOOP_BUCKET_NAME: "${SWOOP_BUCKET_NAME:-swoop}"
      SWOOP_EXECUTION_DIR: "${SWOOP_EXECUTION_DIR:-s3://swoop/execution}"

  server:
    image: "rancher/k3s:${K3S_VERSION:-latest}"
    # --tls-san server adds name "server" to TLS cert so the cert validates
    # when accessing the API via the docker name like https://server:6443
    command: server --tls-san server --https-listen-port ${K8S_PORT:-6443}
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
      - K3S_TOKEN=secret
      - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
      - K3S_KUBECONFIG_MODE=666
    volumes:
      # This is just so that we get the kubeconfig file out
      - .:/output
    ports:
      - ${K8S_PORT:-6443}:${K8S_PORT:-6443}  # Kubernetes API Server

  agent:
    image: "rancher/k3s:${K3S_VERSION:-latest}"
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
      - K3S_URL=https://server:${K8S_PORT:-6443}
      - K3S_TOKEN=secret

  cluster-setup:
    image: alpine/k8s:1.27.3
    depends_on:
      - server
      - agent
    restart: "no"
    volumes:
      - .:/opt/swoop-go
    environment:
      - ARGO_VERSION=latest
      - KUBECONFIG=/opt/swoop-go/kubeconfig.yaml
      - SERVER_URL=https://server:${K8S_PORT:-6443}
    entrypoint: [ "sh", "/opt/swoop-go/bin/setup-cluster.sh" ]

  postgres:
    image: quay.io/element84/swoop-db:latest
    restart: always
    environment:
      POSTGRES_DB: "${PGDATABASE:-swoop}"
      POSTGRES_PASSWORD: "${PGPASSWORD:-password}"
      POSTGRES_USER: "${PGUSER:-postgres}"
    ports:
      - "${PGPORT:-5432}:5432"

  minio:
    image: quay.io/minio/minio
    ports:
      - "9010:9000"
      - "9011:9001"
    environment:
      MINIO_ROOT_USER: "${SWOOP_ACCESS_KEY_ID:-minio}"
      MINIO_ROOT_PASSWORD: "${SWOOP_SECRET_ACCESS_KEY:-password}"
      SWOOP_BUCKET_NAME: "${SWOOP_BUCKET_NAME:-swoop}"
    entrypoint: bash -c 'mkdir -p "$${1}/${SWOOP_BUCKET_NAME}" && exec minio server --console-address ":9011" "$${1}"' -- "/tmp/minio"
